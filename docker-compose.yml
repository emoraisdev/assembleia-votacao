services:

  votacao-db:
    image: mongo:latest
    container_name: votacao-db
    restart: always
    networks:
      - assembleia-votacao
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=123456
    ports:
      - 27017:27017

  assembleia-db:
    image: postgres:latest
    container_name: assembleia-db
    networks:
      - assembleia-votacao
    environment:
      - POSTGRES_DB=assembleia-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d assembleia-db" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      # Configurações essenciais KRaft
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"

      # Configurações de listener
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"

      # Configurações adicionais recomendadas
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CFG_NUM_PARTITIONS: "1"
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: "1"
    ports:
      - "9092:9092"
    networks:
      - assembleia-votacao

  assembleia-service:
    build:
      context: ./assembleia-service
    container_name: assembleia-service
    depends_on:
      assembleia-db:
        condition: service_healthy
      kafka:
        condition: service_started
    ports:
      - "8081:8081"
    environment:
      DB_URL: assembleia-db
      DB_NAME: assembleia-db
      DB_USERNAME: postgres
      DB_PASSWORD: 123456
      KAFKA_URL: kafka
      VOTACAO-SERVICE_URL: votacao-service
    networks:
      - assembleia-votacao

  votacao-service:
    build:
      context: ./votacao-service
    container_name: votacao-service
    ports:
      - "8082:8082"
    environment:
      DB_URL: votacao-db
      DB_NAME: votacao-db
      DB_USERNAME: admin
      DB_PASSWORD: 123456
      KAFKA_URL: kafka
    networks:
      - assembleia-votacao
    depends_on:
      kafka:
        condition: service_started

networks:
  assembleia-votacao:
    driver: bridge